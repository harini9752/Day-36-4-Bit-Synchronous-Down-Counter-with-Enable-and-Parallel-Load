module tb_four_bit_down_counter_enable_load;

  reg clk, rst_n, en, load;
  reg [3:0] parallel_load_value;
  wire [3:0] count;

  four_bit_down_counter_enable_load uut (
    .clk(clk),
    .rst_n(rst_n),
    .en(en),
    .load(load),
    .parallel_load_value(parallel_load_value),
    .count(count)
  );

  initial begin
    // Test 1: Counter without loading
    clk = 0;
    rst_n = 1;
    en = 1;
    load = 0;
    #10 $display("Time=%0t clk=%b rst_n=%b en=%b load=%b parallel_load_value=%b count=%b", $time, clk, rst_n, en, load, parallel_load_value, count);

    // Test 2: Counter with loading
    load = 1;
    parallel_load_value = 4'b1101;
    #10 $display("Time=%0t clk=%b rst_n=%b en=%b load=%b parallel_load_value=%b count=%b", $time, clk, rst_n, en, load, parallel_load_value, count);

    // Add more test cases as needed

    $finish;
  end

  always #5 clk = ~clk;

endmodule
